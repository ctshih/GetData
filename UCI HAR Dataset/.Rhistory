local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
q()
find.package("devtools")
cube <- function(x,n) {x^3}
cube(3)
x <- 1:10
x
if(x>5){x<-0}
if(x>5)
c
if(x>5) x
x
x>5
if(x<5){x<-0}
x
x<-1:10
x
x<-0
x
f<-function(x){g<-function(y){y+z}
z<-4
x+g(x)
}
z<-10
f(3)
x<-5
y<-if(x<3){NA}else{10}
y
for(i in 1:10){print(i)}
x<-("a","b","c")
x<-c("a","b","c")
x
seq_along(x)
seq_len(x)
x
x<-matrix(1:6,2,3)
x
nrow(x)
seq_len(nrow(x))
seq_len(ncol(x))
seq_along(ncol(x))
seq_along(x)
computeEstimate()
f<-function(a,b){
print(a)
print(b)
}
f(45)
f(45,55)
search()
lm
make.power<-function(n){
pow <- function(x){x^n}
pow
}
cube<-make.power(3)
cube
cube(3)
make.power
cube
clear
q()
# Read the data from training and test sets and combine the two sets together
test_data <- read.table("test/X_test.txt")
train_data <- read.table("train/X_train.txt")
data <- rbind(test_data, train_data)
# Read the subjects and combine the two sets together
test_subject <- read.table("test/subject_test.txt")
train_subject <- read.table("train/subject_train.txt")
subject <- rbind(test_subject, train_subject)
name(subject) <- "Subject"
# Read the labels of activities and combine
test_label <- read.table("test/y_test.txt")
train_label <- read.table("train/y_train.txt")
label <- rbind(test_label, train_label)
# Read the name of measurements and assign to the data
measurement <- read.table("features.txt", stringsAsFactors = FALSE)
names(data) <- measurement$V2
# Extract the data for the mean and standard deviation of the measurements
MeanStdCol <- grep("mean|std[^F]", measurement$V2)
MeanStdData <- data[,MeanStdCol]
# Convert the activity labels to activity names
activities <- read.table("activity_labels.txt")
activity_data <- as.data.frame(activities[label[,1],2])
names(activity_data) <- "Activity"
getwd()
setwd("J:\\CloudStation\\Coursera\\GetData\\UCI HAR Dataset")
source("run_analysis.R")
names(subject) <- "Subject"
# Read the labels of activities and combine
test_label <- read.table("test/y_test.txt")
train_label <- read.table("train/y_train.txt")
label <- rbind(test_label, train_label)
# Read the name of measurements and assign to the data
measurement <- read.table("features.txt", stringsAsFactors = FALSE)
names(data) <- measurement$V2
# Extract the data for the mean and standard deviation of the measurements
MeanStdCol <- grep("mean|std[^F]", measurement$V2)
MeanStdData <- data[,MeanStdCol]
# Convert the activity labels to activity names
activities <- read.table("activity_labels.txt")
activity_data <- as.data.frame(activities[label[,1],2])
names(activity_data) <- "Activity"
str(subject)
TidyData <- cbind(subject,activity_data,MeanStdData)
fix(TidyData)
write.table(TidyData, "tidy_data.txt", row.name = FALSE)
TT <- read.table("tidy_data.txt")
dim(TT)
dim(TidyData)
fix(TT)
fix(TidyData)
rm(TT)
TT <- read.table("tidyData2.txt")
TT <- read.table("tidyData2.txt")
fix(TT)
unique(subject)
fix(subject)
unique(subject)
unique(subject$V2)
unique(subject)
fix(TidyData)
unique(TidyData$"Subject")
sort(unique(TidyData$"Subject"))
length(unique(TidyData$"Subject"))
View(TT)
View(TT)
split_subject <- split(TidyData, TidyData$"Subject")
class(split_subject)
rm(split_subject)
names(TidyData)
names(TidyData[1])
class(TidyData$1)
class(TidyData$"Subject")
TidyData$"Subject" <- as.factor(TidyData$"Subject")
class(TidyData$"Subject")
TidyData$"Subject" <- as.factor(TidyData$"Activity")
TidyData <- cbind(subject,activity_data,MeanStdData)
TidyData$"Subject" <- as.factor(TidyData$"Subject")
fix(TidyData)
class(TidyData$"Activity")
x1 <- c(1,2,3,4,5,6)
x2 <- c("N","N","C","C","S","S")
class(x2)
x2 <- as.factor(x2)
class(x2)
x2
tapply(x1, x2, sum)
fix(TidyData)
unique(TidyData$"Subject")
TidyData <- cbind(subject,activity_data,MeanStdData)
unique(TidyData$"Subject")
class(TidyData$"Subject")
dim(TidyData)
dim(TidyData)[2]
fix(TidyData)
length(MeanStdCol)
length(activities)
activities
length(activities$2)
activities
length(activities$V2)
n_subject <- length(unique(TidyData$"Subject"))
n_activity <- length(activities$V2)
n_measure <- length(MeanStdCol)
n_activity
n_measure
n_subject
dim(TidyData)
dim(TidyData)[1]
fix(TidyData)
TidyMean <- data.frame(matrix(ncol=n_measure,nrow=n_activity*n_subject))
fix(TidyMean)
dim(TidyMean)
View(test_label)
i_subject <- unique(TidyData$"Subject")
n_subject <- length(i_subject)
n_activity <- length(activities$V2)
n_measure <- length(MeanStdCol)+2
n_data <- dim(TidyData)[1]
TidyMean <- data.frame(matrix(ncol=n_measure,nrow=n_activity*n_subject))
irow <- 1
for (s in 1:n_subject){
for (a in 1:n_activity){
TidyMean[irow,1] <- i_subject[s]
TidyMean[irow,2] <- activities[a,2]
part <- TidyData[TidyData$"Subject"==s & TidyData$"Activity"==activities[a,2],]
TidyMean[irow, 3:n_measure] <- colMeans(part[,3:n_measure])
irow = irow+1
}
}
TidyMean
fix(TidyMean)
names(TidyMean) <- names(TidyData)
fix(TidyMean)
write.table(TidyMean, "tidy_data_mean.txt", row.name = FALSE)
TTT<-read.table("tidy_data_mean.txt")
View(TTT)
TTT<-read.table("tidy_data_mean.txt", header=TRUE)
View(TTT)
dir()
